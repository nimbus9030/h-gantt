<?php

use Illuminate\Database\Seeder;
use Illuminate\Support\Carbon;

class TasksTableSeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {

	    //timestamps are old so push them all forward to today
	    $offset = time() * 1000 - 1396994400000;
//#1
	    $task = array(
		  'project_id' => 1,
	      'name' => 'My Project',
	      'progress' => 0,
	      'progress_by_worklog' => false, //this means that user can/can't change the progress %
	      'relevance' => 0,//this probably the paid version. This might mean the importance/priority of the task
	       'type' => "",//this is also used by the paid version. We can use as 'type' of task?
	       'type_id' => 0,//this is also used by the paid version. We can use as 'type' of task?
	      'description' => "",
	      'code' => "project",//code/short name of item
	      'level' => 0,
	      'status' => "STATUS_ACTIVE",
	      'depends' => "",
	      'can_write' => true, //this means user can/can't update the task
	      'start' => Carbon::createFromTimestampMs(1396994400000+$offset)->toDateTimeString(),
	      'duration' => 20,
	      'end' => Carbon::createFromTimestampMs(1399586399999+$offset)->toDateTimeString(),
	      'start_is_milestone' => false,
	      'end_is_milestone' => false,
	      'collapsed' => false,//this means the table list is collapsed/expanded on startup
	      // 'assigs' => [],//this array table will be auto-generated by the database
	      'has_child' => true //not sure how this is set. Maybe the database will do this?
 	      );

	     DB::table('tasks')->insert($task);

//#2

 	    $task = array(
 	      'project_id' => 1,
	      'name' => 'My Phase 1',
	      'progress' => 0,
	      'progress_by_worklog' => false, //this means that user can/can't change the progress %
	      'relevance' => 0,//this probably the paid version. This might mean the importance/priority of the task
	      'type' => "",//this is also used by the paid version. We can use as 'type' of task?
	      'type_id' => 0,//this is also used by the paid version. We can use as 'type' of task?
	      'description' => "",
	      'code' => "Phase 1",
	      'level' => 1,
	      'status' => "STATUS_ACTIVE",
	      'depends' => "",
	      'can_write' => true, //this means user can/can't update the task
	      'start' => Carbon::createFromTimestampMs(1396994400000+$offset)->toDateTimeString(),
	      'duration' => 10,
	      'end' => Carbon::createFromTimestampMs(1398203999999+$offset)->toDateTimeString(),
	      'start_is_milestone' => false,
	      'end_is_milestone' => false,
	      'collapsed' => false,//this means the table list is collapsed/expanded on startup
	      // 'assigs' => [],//this array table will be auto-generated by the database
	      'has_child' => true //not sure how this is set. Maybe the database will do this?
 	      );

	     DB::table('tasks')->insert($task);

//#3
  	    $task = array(
  	      'project_id' => 1,
	      'name' => 'My Task 1',
	      'progress' => 0,
	      'progress_by_worklog' => false, //this means that user can/can't change the progress %
	      'relevance' => 0,//this probably the paid version. This might mean the importance/priority of the task
	      'type' => "",//this is also used by the paid version. We can use as 'type' of task?
	      'type_id' => 0,//this is also used by the paid version. We can use as 'type' of task?
	      'description' => "",
	      'code' => "Task 1",
	      'level' => 2,
	      'status' => "STATUS_ACTIVE",
	      'depends' => "",
	      'can_write' => true, //this means user can/can't update the task
	      'start' => Carbon::createFromTimestampMs(1396994400000+$offset)->toDateTimeString(),
	      'duration' => 2,
	      'end' => Carbon::createFromTimestampMs(1397167199999+$offset)->toDateTimeString(),
	      'start_is_milestone' => false,
	      'end_is_milestone' => false,
	      'collapsed' => false,//this means the table list is collapsed/expanded on startup
	      // 'assigs' => [],//this array table will be auto-generated by the database
	      'has_child' => false //not sure how this is set. Maybe the database will do this?
 	      );

	     DB::table('tasks')->insert($task);

//#4
   	    $task = array(
   	      'project_id' => 1,
	      'name' => 'My Task 2',
	      'progress' => 0,
	      'progress_by_worklog' => false, //this means that user can/can't change the progress %
	      'relevance' => 0,//this probably the paid version. This might mean the importance/priority of the task
	      'type' => "",//this is also used by the paid version. We can use as 'type' of task?
	      'type_id' => 0,//this is also used by the paid version. We can use as 'type' of task?
	      'description' => "",
	      'code' => "task 2",
	      'level' => 2,
	      'status' => "STATUS_SUSPENDED",
	      'depends' => "3",
	      'can_write' => true, //this means user can/can't update the task
	      'start' => Carbon::createFromTimestampMs(1397167200000+$offset)->toDateTimeString(),
	      'duration' => 4,
	      'end' => Carbon::createFromTimestampMs(1397685599999+$offset)->toDateTimeString(),
	      'start_is_milestone' => false,
	      'end_is_milestone' => false,
	      'collapsed' => false,//this means the table list is collapsed/expanded on startup
	      // 'assigs' => [],//this array table will be auto-generated by the database
	      'has_child' => true //not sure how this is set. Maybe the database will do this?
 	      );

	     DB::table('tasks')->insert($task);

//#5
   	    $task = array(		
   	      'project_id' => 1,
	      'name' => 'My Phase 2',
	      'progress' => 0,
	      'progress_by_worklog' => false, //this means that user can/can't change the progress %
	      'relevance' => 0,//this probably the paid version. This might mean the importance/priority of the task
	      'type' => "",//this is also used by the paid version. We can use as 'type' of task?
	      'type_id' => 0,//this is also used by the paid version. We can use as 'type' of task?
	      'description' => "",
	      'code' => "Phase 2",
	      'level' => 1,
	      'status' => "STATUS_SUSPENDED",
	      'depends' => "2:5",
	      'can_write' => true, //this means user can/can't update the task
	      'start' => Carbon::createFromTimestampMs(1398981600000+$offset)->toDateTimeString(),
	      'duration' => 5,
	      'end' => Carbon::createFromTimestampMs(1399586399999+$offset)->toDateTimeString(),
	      'start_is_milestone' => false,
	      'end_is_milestone' => false,
	      'collapsed' => false,//this means the table list is collapsed/expanded on startup
	      // 'assigs' => [],//this array table will be auto-generated by the database
	      'has_child' => true //not sure how this is set. Maybe the database will do this?
 	      );

	     DB::table('tasks')->insert($task);

//#6
   	    $task = array(		
   	      'project_id' => 1,
	      'name' => 'My Task 3',
	      'progress' => 0,
	      'progress_by_worklog' => false, //this means that user can/can't change the progress %
	      'relevance' => 0,//this probably the paid version. This might mean the importance/priority of the task
	      'type' => "",//this is also used by the paid version. We can use as 'type' of task?
	      'type_id' => 0,//this is also used by the paid version. We can use as 'type' of task?
	      'description' => "",
	      'code' => "Task 3",
	      'level' => 2,
	      'status' => "STATUS_SUSPENDED",
	      'depends' => "",
	      // 'canWrite' => true, //this means user can/can't update the task
	      'start' => Carbon::createFromTimestampMs(1398981600000+$offset)->toDateTimeString(),
	      'duration' => 2,
	      'end' => Carbon::createFromTimestampMs(1399327199999+$offset)->toDateTimeString(),
	      'start_is_milestone' => false,
	      'end_is_milestone' => false,
	      'collapsed' => false,//this means the table list is collapsed/expanded on startup
	      // 'assigs' => [],//this array table will be auto-generated by the database
	      'has_child' => false //not sure how this is set. Maybe the database will do this?
 	      );

	     DB::table('tasks')->insert($task);

//#7
   	    $task = array(		
   	      'project_id' => 1,
	      'name' => 'My Task 4',
	      'progress' => 0,
	      'progress_by_worklog' => false, //this means that user can/can't change the progress %
	      'relevance' => 0,//this probably the paid version. This might mean the importance/priority of the task
	      'type' => "",//this is also used by the paid version. We can use as 'type' of task?
	       'type_id' => 0,//this is also used by the paid version. We can use as 'type' of task?
	      'description' => "",
	      'code' => "Task 4",
	      'level' => 2,
	      'status' => "STATUS_SUSPENDED",
	      'depends' => "6",
	      'can_write' => true, //this means user can/can't update the task
	      'start' => Carbon::createFromTimestampMs(1399327200000+$offset)->toDateTimeString(),
	      'duration' => 3,
	      'end' => Carbon::createFromTimestampMs(1399586399999+$offset)->toDateTimeString(),
	      'start_is_milestone' => false,
	      'end_is_milestone' => false,
	      'collapsed' => false,//this means the table list is collapsed/expanded on startup
	      // 'assigs' => [],//this array table will be auto-generated by the database
	      'has_child' => false //not sure how this is set. Maybe the database will do this?
 	      );

	     DB::table('tasks')->insert($task);
//#8			
   	    $task = array(		
   	     'project_id' => 1,
	      'name' => 'My Task 5',
	      'progress' => 0,
	      'progress_by_Worklog' => false, //this means that user can/can't change the progress %
	      'relevance' => 0,//this probably the paid version. This might mean the importance/priority of the task
	      'type' => "",//this is also used by the paid version. We can use as 'type' of task?
	      'type_id' => 0,//this is also used by the paid version. We can use as 'type' of task?
	      'description' => "",
	      'code' => "Task 5",
	      'level' => 2,
	      'status' => "STATUS_SUSPENDED",
	      'depends' => "6",
	      'can_write' => true, //this means user can/can't update the task
	      'start' => Carbon::createFromTimestampMs(1399327200000+$offset)->toDateTimeString(),
	      'duration' => 2,
	      'end' => Carbon::createFromTimestampMs(1399499999999+$offset)->toDateTimeString(),
	      'start_is_milestone' => false,
	      'end_is_milestone' => false,
	      'collapsed' => false,//this means the table list is collapsed/expanded on startup
	      // 'assigs' => [],//this array table will be auto-generated by the database
	      'has_child' => false //not sure how this is set. Maybe the database will do this?
 	      );

	     DB::table('tasks')->insert($task);

    //   {"id": -1, "name": "Gantt editor", "progress": 0, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 0, "status": "STATUS_ACTIVE", "depends": "", "canWrite": true, "start": 1396994400000, "duration": 20, "end": 1399586399999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": true},
    //   {"id": -2, "name": "coding", "progress": 0, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 1, "status": "STATUS_ACTIVE", "depends": "", "canWrite": true, "start": 1396994400000, "duration": 10, "end": 1398203999999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": true},
    //   {"id": -3, "name": "gantt part", "progress": 0, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 2, "status": "STATUS_ACTIVE", "depends": "", "canWrite": true, "start": 1396994400000, "duration": 2, "end": 1397167199999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": false},
    //   {"id": -4, "name": "editor part", "progress": 0, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 2, "status": "STATUS_SUSPENDED", "depends": "3", "canWrite": true, "start": 1397167200000, "duration": 4, "end": 1397685599999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": false},
    //   {"id": -5, "name": "testing", "progress": 0, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 1, "status": "STATUS_SUSPENDED", "depends": "2:5", "canWrite": true, "start": 1398981600000, "duration": 5, "end": 1399586399999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": true},
    //   {"id": -6, "name": "test on safari", "progress": 0, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 2, "status": "STATUS_SUSPENDED", "depends": "", "canWrite": true, "start": 1398981600000, "duration": 2, "end": 1399327199999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": false},
    //   {"id": -7, "name": "test on ie", "progress": 0, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 2, "status": "STATUS_SUSPENDED", "depends": "6", "canWrite": true, "start": 1399327200000, "duration": 3, "end": 1399586399999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": false},
    //   {"id": -8, "name": "test on chrome", "progress": 0, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 2, "status": "STATUS_SUSPENDED", "depends": "6", "canWrite": true, "start": 1399327200000, "duration": 2, "end": 1399499999999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": false}
    // ], "selectedRow": 2, "deletedTaskIds": [],

//note: selectedRow = 0 is OK!


    }
}
